Main Layer

Camada onde criamos as instâncias de todas as outras camadas.
Criamos as rotas.
Criamos instâncias dos controllers
Criamos nossos Factorys

Camada Altamente Acoplada. Conhece todas as outras camadas.
Não criamos testes de unidades para esta camada, apena criamos testes de integração.

Dentro do main criamos alguns arquivos:

Server.ts --> Onde criamos o app
/config/app.ts --> Onde inicializamos o nosso app
/config/middlewares --> Fica o arquivo que centraliza nossos middlewares

Como queremos testar nossos middlewares, usando testes de integração, precisamos criar arquivos separados para
cada middleware

Isso dentro da pasta
exemplo:

/middlewares/body-parser.ts
/middlewares/cors.spec.ts

Para testar Middlewares necessitamos da biblioteca supertest --> npm i -D supertest @types/supertest
O supertest serve para emular uma requisição HTTP

Testes de integração (Middlewares)

Criamos rotas fakes e usamos o supertest.

BodyParser

Faz com que o express consiga entender requisições JSON

CORS

Abre as portas da nossa API, ela poderá ser acessada de fora do nosso domínio.
Por default só funciona no mesmo servidor.	


SETAR CONTENT TYPE PARA JSON

Vamos setar o content type da nossa API para JSON
O default do Express é "adivinhar" o content-type. Por isso é bom SETAR o nosso content type
isso é feito setando o header.
res.type('json')
